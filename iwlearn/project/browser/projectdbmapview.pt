<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
      lang="en"
      metal:use-macro="here/main_template/macros/master"
      i18n:domain="iwlearn.project">
<head>
    <metal:javascript_head fill-slot="javascript_head_slot">

 <!-- collective geo map -->

      <metal:use use-macro="context/@@collectivegeo-macros/openlayers" />

  <!-- collective geo map -->

    </metal:javascript_head>
</head>
<body>
    <div metal:fill-slot="main">
        <tal:main-macro metal:define-macro="main">
<!--[if lte IE 8]>
   <div style="color: red;">
    <big><strong>Microsoft Internet Explorer is not supported as this time</strong></big>
    <br />
    if you are using IE version 8 or older, you will not see the list of
    projects or the visualization.
    <br />
    <a style="color: blue;" href="http://browsehappy.com/">Please upgrade your browser </a>
    </div>
    If you cannot upgrade your browser for any reason, you may want to switch off JavaScript
    to see the HTML only version of this website.
<![endif]-->

<ul tal:define="isAnon context/@@plone_portal_state/anonymous;"
    id="projectdb-tabs">
<li><a href="."
        tal:attributes="href string:${context/absolute_url}">Project List
</a></li>
<li><a href="."
    class="selected"
    tal:attributes="href string:${context/absolute_url}/@@project-map-view.html">
    View Map</a></li>
<li><a href="."
    tal:attributes="href string:${context/absolute_url}/@@projectwebsites_view">
    Project websites</a></li>
<li tal:condition="not:isAnon">
    <a href="."
    tal:attributes="href string:${context/absolute_url}/@@maintenance_view.html">
        Maintenance</a>
</li>
</ul>


            <form id="projectmapform" name="search" method="get"
                class="enableAutoFocus" action="map_view.html"
                tal:attributes="action view/__name__">
             <fieldset class="projectdetails">
                <legend>Search for Projects</legend>


                <div class="field odd">
                    <label  for="getProject_type">Project type</label>
                    <div class="formHelp">
                    Return projects of this type
                    </div>
                        <select id="getProject_type" name="getProject_type">
                            <tal:loop tal:repeat="opt view/get_projecttype">
                                <option value="Select project type"
                                    tal:attributes="value opt/value;
                                        selected opt/selected;
                                        disabled opt/disabled;
                                        class opt/disabled;"
                                    tal:content="opt/name">All</option>
                            </tal:loop>
                        </select>
                </div>

                <div class="field even">
                    <label  for="getAgencies">Implementing agency</label>
                    <div class="formHelp">
                    Return projects this agency implements
                    </div>
                        <select id="getAgencies" name="getAgencies">
                            <tal:loop tal:repeat="opt view/get_agency">
                                <option value="Select agency"
                                    tal:attributes="value opt/value;
                                        selected opt/selected;
                                        disabled opt/disabled;
                                        class opt/disabled;"
                                    tal:content="opt/name">All</option>
                            </tal:loop>
                        </select>
                </div>

                <div class="field odd">
                    <label  for="getProject_status">Project status</label>
                    <div class="formHelp">
                    Return projects of this status
                    </div>
                        <select id="getProject_status" name="getProject_status">
                            <tal:loop tal:repeat="opt view/get_status">
                                <option value="Select status"
                                    tal:attributes="value opt/value;
                                        selected opt/selected;
                                        disabled opt/disabled;
                                        class opt/disabled;"
                                    tal:content="opt/name">All</option>
                            </tal:loop>
                        </select>
                </div>

                <!--div class="field odd">
                    <label  for="getSubRegions">Region</label>
                    <div class="formHelp">
                    Return projects in this region
                    </div>
                        <select id="getSubRegions" name="getSubRegions">
                            <tal:loop tal:repeat="opt view/get_region">
                                <option value="Africa"
                                    tal:attributes="value opt/value;
                                        selected opt/selected;
                                        disabled opt/disabled;
                                        class opt/disabled;"
                                    tal:content="opt/name">Africa</option>
                            </tal:loop>
                        </select>
                </div-->

                <div class="formControls even">
                    <input type="submit" value="Search" name="submit"
                        class="context" />
                </div>
              </fieldset>
              <input type="checkbox" id="show-pcu" name="show-pcu" />
              <label for="show-pcu">Location of project management offices</label>
              <br />
              <input type="checkbox" id="show-country" name="show-country"/>
              <label for="show-country">Distribution of projects by partnering countries</label>
                  <!--div class="field">
                    <label  for="getSubRegions">Contry</label>
                    <div class="formHelp">
                    Return projects in this country
                    </div>
                        <select id="getCountry" name="getGountry">
                            <tal:loop tal:repeat="opt view/get_country">
                                <option value="Albania"
                                    tal:attributes="value opt/value;
                                        selected opt/selected;
                                        disabled opt/disabled;
                                        class opt/disabled;"
                                    tal:content="opt/name">Albania</option>
                            </tal:loop>
                        </select>
                </div-->
              <br />
              <input type="checkbox" id="show-basins" name="show-basins" checked="checked"/>
              <label for="show-basins">Transboundary water basins</label>
              <br />
              <div id="basinlayer">
                <div>
                    <input type="checkbox" id="basintype-ocean" name="basintype:list" value="Ocean" checked="checked"/>
                    <label for="basintype-oceans">Open Oceans</label>
                    <input type="checkbox" id="basintype-lmes" name="basintype:list" value="LME" checked="checked"/>
                    <label for="basintype-lmes">Large marine ecosystems (LMES)</label>
                    <input type="checkbox" id="basintype-lakes" name="basintype:list" value="Lake" checked="checked"/>
                    <label for="basintype-lakes">Lakes</label>
                    <input type="checkbox" id="basintype-rivers" name="basintype:list" value="River" checked="checked"/>
                    <label for="basintype-rivers">Rivers</label>
                    <input type="checkbox" id="basintype-aquifers" name="basintype:list" value="Aquifer" checked="checked"/>
                    <label for="basintype-aquifers">Aquifers</label>
                </div>
                <div>
                    <input type="checkbox" id="withgefbasins" name="showgefbasins:list" value="with" checked="checked"/>
                    <label for="withgefbasins">With GEF projects</label>
                    <input type="checkbox" id="withoutgefbasins" name="showgefbasins:list" value="without"/>
                    <label for="withoutgefbasins">Without GEF projects</label>
                </div>
              <br />
              <a id="projectdballkmlurl" href="projectbasin_view.kml">
                    <img src=" http://www.google.com/earth/images/google_earth_feed.gif"
                        alt="open in google earth" />
                    Download KML
                </a>
            </form>

    <div id="projectdbmap" style="width: 100%">
    <br />
<!-- Collective.geo map -->



        <metal:use use-macro="context/@@collectivegeo-macros/map-widget"  />
        <script type="text/javascript"
                src="++resource++geo.kml.javascripts/kml_openlayers.js"></script>
        <span id="map-nav-panel"></span>
        <div id="featureprojectdetails"> click on the map to get details </div>



<!-- /Collective.geo map -->
        </div>
<div class="visualClear">&nbsp;</div>



<script type="text/javascript" tal:content="structure view/get_js">
/*<![CDATA[*/
/*]]>*/
</script>

<script type="text/javascript">
/*<![CDATA[*/


function onBasinLayerChange(event) {
    var map = cgmap.config['default-cgmap'].map;
    var is_visible = $(this).is(':checked');
    var kmls = map.getLayersByName('Basin Cluster');
    layer = kmls[0];
    layer.setVisibility(is_visible);
    var kmls = map.getLayersByName('Basin Detail');
    layer = kmls[0];
    layer.setVisibility(is_visible);
    if (is_visible) {
        $("#basinlayer").show()
    } else {
        $("#basinlayer").hide()
    };
    refreshDownloadKmlUrl(event);
}


function onCountryLayerChange(event) {
    var map = cgmap.config['default-cgmap'].map;
    var is_visible = $(this).is(':checked');
    var kmls = map.getLayersByName('Countries');
    layer = kmls[0];
    layer.setVisibility(is_visible);
    refreshDownloadKmlUrl(event);
}


function onPCULayerChange(event) {
    var map = cgmap.config['default-cgmap'].map;
    var is_visible = $(this).is(':checked');
    var kmls = map.getLayersByName('Project management offices');
    layer = kmls[0];
    layer.setVisibility(is_visible);
    refreshDownloadKmlUrl(event);
}




$('#projectmapform').submit
(
    function ()
        {
            onLayerOptionsChange()
            return false;
        }
);

 $(document).ready(function() {
   $("#projectmapform").find("select").each(function(i) {
        $(this).change(onLayerOptionsChange) ;
   });
   $("#basinlayer").find("input").each(function(i) {
       $(this).change(onBasinLayerOptionsChange);
    });
   $("#show-basins").change(onBasinLayerChange);
   $("#show-pcu").change(onPCULayerChange);
   $("#show-country").change(onCountryLayerChange);
 });


    /* Zoom to Selected Feature from within Popup */

    function zoomToSelectedFeature(lon, lat, zoomfactor){
        var lonlat = new OpenLayers.LonLat(lon,lat);
        var map = cgmap.config['default-cgmap'].map;
        // Get Current Zoom
        currZoom = map.getZoom();
        // New Zoom
        newZoom = currZoom + zoomfactor;
        // Center and Zoom
        map.setCenter(lonlat, newZoom);
        // Remove Popups
        for (var i=0; i<map.popups.length; ++i){
            map.removePopup(map.popups[i]);
        };
    };

/*]]>*/
</script>

<script type="text/javascript">
/*<![CDATA[*/
    $(window).bind("load", function() {
        var map = cgmap.config['default-cgmap'].map;

        map.events.on({
                moveend: function(event) {
                    if (event.zoomChanged) {
                        var kmls = map.getLayersByName('Basin Cluster');
                        layer = kmls[0];
                        layer.redraw();
                    }
                  }
            });

        var kmls = map.getLayersByClass('OpenLayers.Layer.Vector');


        function onFeatureUnselect(event) {
                for (var i=0; i<map.popups.length; ++i){
                        map.removePopup(map.popups[i]);
                        map.popups[i].destroy();
                        map.popups[i] = null;
                };

        };

        function onPopupClose(event) {
             for (var i=0; i<map.popups.length; ++i){
                        map.removePopup(map.popups[i]);
                };
        };
        var lt = String.fromCharCode(60);
        var gt = String.fromCharCode(62);

        function onFeatureSelect(event) {
            if (event.feature.cluster == null){
                var feature = event.feature;
                var content = lt + "h2" + gt + feature.attributes.name + lt + "/h2" + gt + feature.attributes.description;
                popup = new OpenLayers.Popup.FramedCloud("chicken",
                                         feature.geometry.getBounds().getCenterLonLat(),
                                         new OpenLayers.Size(500,500),
                                         content,
                                         null, true, onPopupClose);
                refreshFeatureDetails(feature.layer.name, feature.data.name.split('\t')[0]);
                feature.popup = popup;
                map.addPopup(popup);
            } else {
                var lonlat = event.feature.geometry.getBounds().getCenterLonLat();
                var currZoom = this.map.getZoom();
                var newZoom = currZoom + 3;
                this.map.setCenter(lonlat, newZoom);
            };
        };

        function onPointLayerFeatureSelect(event) {
                var message = '';
                var lt = String.fromCharCode(60);
                var gt = String.fromCharCode(62);
                var maxp = 12;
                var zoom_point = event.feature.geometry.getBounds().getCenterLonLat();
                var lon = zoom_point.lon;
                var lat = zoom_point.lat;
                function makeLink( title, description) {
                    var a = description.indexOf('href=');
                    var b = description.indexOf('"', a + 6);
                    var href = description.substring(a, b + 1) + ' ';
                    name = title.substring(0,32) + '...';
                    return lt + 'a ' + href + ' title="' + title + '" ' + gt + name + lt +'/a' + gt
                    }
                if (event.feature.cluster != null){
                    if (event.feature.cluster.length > maxp){
                            var currZoom = this.map.getZoom();
                            var newZoom = currZoom + 2;
                            this.map.setCenter(zoom_point, newZoom);

                    }
                    else if (event.feature.cluster.length > 1 && event.feature.cluster.length <= maxp){
                            message = lt +'div' + gt + event.feature.cluster.length + ' projects found: ';
                            message += lt + 'br /' + gt;
                            message += lt + 'a href="javascript:zoomToSelectedFeature('+ lon + ','+ lat +', 2)"' + gt;
                            message += 'zoom in for more details';
                            message += lt +'/a' + gt;
                            message += lt + 'ul' + gt;
                            for (var i=0; i<event.feature.cluster.length; ++i ) {
                                try {
                                    message += lt + 'li' + gt;

                                        message += makeLink(event.feature.cluster[i].attributes['name'],event.feature.cluster[i].attributes['description']);

                                    message += lt + '/li' + gt;
                                } catch(e) {
                                        //
                                };
                            }
                            message += lt + '/ul' + gt;
                    } else if (event.feature.cluster.length == 1) {
                            message = lt +'div' + gt + makeLink(event.feature.cluster[0].attributes['name'], event.feature.cluster[0].attributes['description']);
                            message += event.feature.cluster[0].attributes['description'];
                    }

                    message += lt + '/div' + gt;
                    if (event.feature.cluster.length <= maxp){
                        popup = new OpenLayers.Popup.FramedCloud("id", event.feature.geometry.bounds.getCenterLonLat(), null, message, null, true, onPopupClose);
                        event.popup = popup;
                        map.addPopup(popup);
                    };
                };

        };

        var navPanel = new OpenLayers.Control.NavigationHistory();
        // parent control must be added to the map
        map.addControl(navPanel);
        var npPanel = new OpenLayers.Control.Panel(
                    {div: document.getElementById("map-nav-panel")}
                );
        npPanel.addControls([navPanel.next, navPanel.previous]);
        map.addControl(npPanel);
        var selectControl = new OpenLayers.Control.SelectFeature(
                kmls,
                {
                    clickout: true,
                    multiple: false,
                    hover: false
                }
            );
        map.addControl(selectControl);
        selectControl.activate();

        for (var i=0; i<kmls.length; ++i){
            if (kmls[i].name != "Project management offices") {
                kmls[i].events.on({"featureselected": onFeatureSelect,
                            "featureunselected": onFeatureUnselect});
                };
        };
        var pmo_kmls = map.getLayersByName('Project management offices');
        for (var i=0; i<pmo_kmls.length; ++i){
            pmo_kmls[i].events.on({"featureselected": onPointLayerFeatureSelect,
                            "featureunselected": onFeatureUnselect});
        };
        //var loadingpanel = new OpenLayers.Control.LoadingPanel();
        //map.addControl(loadingpanel);

});
/*]]>*/
</script>
        </tal:main-macro>
    </div>
</body>
</html>
